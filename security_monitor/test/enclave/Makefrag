# Assumes: $(SM_DIR)
# Assumes: $(BUILD_DIR)
# Assumes: $(ENCLAVE_SRC_DIR)
# Assumes: $(QUEUE_SRC_DIR)
# Assumes: $(CC)
# Assumes: $(CC-AR)
# Assumes: $(OBJCOPY)

# Enclave

ENCLAVE_ELF := $(BUILD_DIR)/enclave.elf
ENCLAVE_BIN := $(BUILD_DIR)/enclave.bin

ENCLAVE_INCLUDES := \
	$(PLATFORM_DIR) \
	$(API_DIR) \
	$(SM_TEST_DIR) \
	$(ENCLAVE_SRC_DIR) \

ENCLAVE_COMMON_SRC := \
	$(ENCLAVE_SRC_DIR)/enclave_entry.S \
  $(ENCLAVE_SRC_DIR)/enclave_code.c \
  $(ENCLAVE_SRC_DIR)/enclave_stack.S \

ifeq ($(DEBUG_ENCLAVE), 1)
ENCLAVE_COMMON_SRC += $(INFRA_DIR)/sbi/console.c
endif

ENCLAVE_LD := $(ENCLAVE_SRC_DIR)/enclave.lds

$(ENCLAVE_ELF): $(ENCLAVE_COMMON_SRC) $(ENCLAVE_LD) $(BUILD_DIR)
	$(CC) $(CFLAGS) $(addprefix -I , $(ENCLAVE_INCLUDES)) $(LDFLAGS) -T $(ENCLAVE_LD) $< $(ENCLAVE_COMMON_SRC) -o $@

$(ENCLAVE_BIN): $(ENCLAVE_ELF)
	$(OBJCOPY) -O binary --only-section=.text --only-section=.rodata --only-section=.srodata* --only-section=.data --only-section=.sdata --only-section=.bss --only-section=.sbss --set-section-flags .bss=alloc,load,contents --set-section-flags .sbss=alloc,load,contents $< $@

.PHONY: enclave
enclave : $(ENCLAVE_BIN)
