# Assumes: $(SM_DIR)
# Assumes: $(BUILD_DIR)
# Assumes: $(CRYPTO_ENCLAVE_SRC_DIR)
# Assumes: $(QUEUE_SRC_DIR)
# Assumes: $(CC)
# Assumes: $(OBJCOPY)



# Enclave

CRYPTO_ENCLAVE_ELF := $(BUILD_DIR)/crypto_enclave.elf
CRYPTO_ENCLAVE_BIN := $(BUILD_DIR)/crypto_enclave.bin

CRYPTO_ENCLAVE_INCLUDES := \
	$(PLATFORM_DIR) \
	$(API_DIR) \
	$(INFRA_DIR) \
	$(CRYPTO_ENCLAVE_SRC_DIR) \
	$(QUEUE_SRC_DIR) \

CRYPTO_ENCLAVE_SRC := \
  $(CRYPTO_ENCLAVE_SRC_DIR)/memcpy.c \
  $(CRYPTO_ENCLAVE_SRC_DIR)/enclave_entry.S \
  $(CRYPTO_ENCLAVE_SRC_DIR)/enclave_code.c \
  $(CRYPTO_ENCLAVE_SRC_DIR)/enclave_stack.S \
  $(CRYPTO_ENCLAVE_SRC_DIR)/ed25519/add_scalar.c \
  $(CRYPTO_ENCLAVE_SRC_DIR)/ed25519/fe.c \
  $(CRYPTO_ENCLAVE_SRC_DIR)/ed25519/ge.c \
  $(CRYPTO_ENCLAVE_SRC_DIR)/ed25519/key_exchange.c \
  $(CRYPTO_ENCLAVE_SRC_DIR)/ed25519/keypair.c \
  $(CRYPTO_ENCLAVE_SRC_DIR)/ed25519/sc.c \
  $(CRYPTO_ENCLAVE_SRC_DIR)/ed25519/sha512.c \
  $(CRYPTO_ENCLAVE_SRC_DIR)/ed25519/sign.c \
  $(CRYPTO_ENCLAVE_SRC_DIR)/ed25519/verify.c \
  $(QUEUE_SRC_DIR)/msgq.c \

ifeq ($(DEBUG_ENCLAVE), 1)
CRYPTO_ENCLAVE_SRC += $(INFRA_DIR)/sbi/console.c
endif

CRYPTO_ENCLAVE_LD := $(CRYPTO_ENCLAVE_SRC_DIR)/enclave.lds

$(CRYPTO_ENCLAVE_ELF): $(CRYPTO_ENCLAVE_SRC) $(CRYPTO_ENCLAVE_LD) $(BUILD_DIR) $(LIB_SRCS)
	$(CC) $(CFLAGS) $(addprefix -I , $(CRYPTO_ENCLAVE_INCLUDES)) $(LDFLAGS) -T $(CRYPTO_ENCLAVE_LD) $(CRYPTO_ENCLAVE_SRC) $(LIB_SRCS) -o $@

$(CRYPTO_ENCLAVE_BIN): $(CRYPTO_ENCLAVE_ELF)
	$(OBJCOPY) -O binary --only-section=.text --only-section=.rodata --only-section=.srodata* --only-section=.data --only-section=.sdata --only-section=.bss --only-section=.sbss --set-section-flags .bss=alloc,load,contents --set-section-flags .sbss=alloc,load,contents $< $@

.PHONY: crypto_enclave
crypto_enclave : $(CRYPTO_ENCLAVE_BIN)
